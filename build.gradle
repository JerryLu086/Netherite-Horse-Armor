buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: "${forgegradle_version}", changing: true
        classpath "org.parchmentmc:librarian:${librarian_version}"
        classpath group: 'org.spongepowered', name: 'mixingradle', version: "${mixingradle_version}"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

mixin {
    add sourceSets.main, "netherite_horse_armor.refmap.json"
}

version = "${mod_version}"
group = 'com.jerrylu086.netherite_horse_armor'
archivesBaseName = 'netherite_horse_armor'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: 'parchment', version: "${parchment_version}-${mc_version}"

    runs {
        client {

            workingDirectory project.file('run')

            arg '-mixin.config=netherite_horse_armor.mixins.json'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                netherite_horse_armor {
                    source sourceSets.main
                }
            }
        }

        server {

            workingDirectory project.file('run')

            arg '-mixin.config=netherite_horse_armor.mixins.json'

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            mods {
                netherite_horse_armor {
                    source sourceSets.main
                }
            }
        }

        data {

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'netherite_horse_armor', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                netherite_horse_armor {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
}

jar {
    manifest {
        attributes([
                "Specification-Title": project.name,
                "Specification-Vendor": "jerrylu086",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": "jerrylu086",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "netherite_horse_armor.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}